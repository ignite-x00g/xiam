body {
  margin:0;
  font-family:'Segoe UI',Arial,sans-serif;
  background:var(--clr-bg);
  color:var(--clr-text);
  transition:background .3s;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

/* body.dark might be used by theme toggles, or body[data-theme="dark"] */
/* Using body.dark from the sample for now for color variable overrides */
body.dark {
  --clr-bg: var(--clr-bg-dark); /* More robust: use pre-defined dark versions */
  --clr-text: var(--clr-text-dark);
  /* Ensure components using these variables respond accordingly */
}

main { /* Assuming 'main' is the primary content wrapper */
  flex-grow: 1;
}

footer {
  text-align: center; /* Center the text within the footer */
  padding: 1rem; /* Add some padding */
  background-color: var(--clr-bg); /* Match body background or define a specific footer bg */
  border-top: 1px solid var(--clr-primary); /* Optional: add a top border */
}

body.dark footer {
    background-color: var(--clr-bg-dark);
    border-top: 1px solid var(--clr-primary-dark);
}


/* Other main styles will be added here */

/************* MODAL STYLES *************/
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent backdrop */
  display: flex; /* Use flexbox for centering */
  align-items: center; /* Vertical center */
  justify-content: center; /* Horizontal center */
  z-index: 1000; /* Ensure it's above other content */
}

.service-modal-center .modal-content {
  /* Assuming .modal-content is the direct child of .modal-overlay that needs centering */
  /* Add any specific styling for the centered modal's content box if needed */
  /* For example, max-width, background, padding, etc. */
  background-color: var(--clr-bg); /* Use theme background */
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0,0,0,0.2);
  max-width: 90%; /* Max width for responsiveness */
  max-height: 90vh; /* Max height for responsiveness */
  overflow-y: auto; /* Allow scrolling for content that overflows */
}

/* Ensure that the service-modal-center itself (which is an alias for modal-overlay in this case)
   also uses flex to center its .modal-content child if it's not already covered by .modal-overlay */
.service-modal-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

/*************  SHARED INPUT STYLES (from sample) *************/
input,textarea,select{width:100%;padding:.6rem;margin-top:.2rem;border-radius:6px;border:1px solid #ccc;font-size:1rem;background:var(--clr-bg);color:inherit}
textarea{resize:vertical}
body.dark input, body.dark textarea, body.dark select { background: var(--clr-bg-dark); color: var(--clr-text-dark); border-color: #555; }


/*************  JOIN MODAL (rich form - from sample) *************/
.form-pairs{display:grid;grid-template-columns:1fr 1fr;gap:1.3rem 2rem}
@media(max-width:800px){.form-pairs{grid-template-columns:1fr}}
.form-section{border:1px solid #ddd;padding:1rem;border-radius:8px;background:#f9f9f9;display:flex;flex-direction:column;gap:.6rem}
body.dark .form-section { background: #2a2a2a; border-color: #444; }
.form-section.completed{border-color:#28a745}
.section-header{display:flex;justify-content:space-between;align-items:center}
.circle-btn{width:28px;height:28px;border-radius:50%;border:none;background:var(--clr-primary);color:#fff;font-weight:bold;cursor:pointer;font-size:1.2rem;margin-left:.4rem}
.circle-btn.remove{background:#dc3545}
.accept-btn,.edit-btn{background:#28a745;color:#fff;padding:.4rem 1rem;border:none;border-radius:4px;font-size:.9rem;cursor:pointer;margin-top:.3rem}
.edit-btn{background:#ffc107;color:#000}
.form-section.completed h2::after{content:" ✅";font-size:1rem;color:#28a745}

/*************  CONTACT MODAL (from sample) *************/
.form-row{display:flex;flex-wrap:wrap;gap:1rem}
.form-cell{flex:1 1 48%;display:flex;flex-direction:column}
@media(max-width:600px){.form-cell{flex:1 1 100%}}

/*************  CHATBOT (from sample) *************/
/* Styles for #chatbot-container itself are handled by inline styles on modal-content or direct styling if preferred */
/* The .modal-content for chatbot modal has max-width: 295px; and padding: 0; */

#chatbot-container{width:100%; /* Takes width of its .modal-content parent */ height:540px;background:#2e1852;border-radius:8px; /* Match modal-content border-radius */ border:2px solid var(--clr-accent);box-shadow:0 8px 32px #0006;display:flex;flex-direction:column;overflow:hidden}
body.dark #chatbot-container { background: #1e1e1e; border-color: var(--clr-accent); /* Or a darker accent */ }

#chatbot-header{background:var(--clr-accent);color:#fff;padding:1rem;font-weight:bold;font-size:1.25rem;text-align:center}
#chat-log{flex:1;padding:1rem;overflow-y:auto;background:#1b0e2d;color:#fff;font-size:1rem}
body.dark #chat-log { background: #121212; color: var(--clr-text-dark); }
.chat-msg{margin-bottom:.7rem}.user{text-align:right;color:#e7e7e7}.bot{text-align:left;color:var(--clr-accent)}
body.dark .user { color: #ccc; }
body.dark .bot { color: var(--clr-accent); /* Accent might need adjustment for dark theme visibility */ }

#chatbot-form-container{background:#220f3a;border-top:1px solid var(--clr-accent);padding:.5rem}
body.dark #chatbot-form-container { background: #171717; border-top-color: var(--clr-accent); }

#chatbot-input-row{display:flex;margin-bottom:.5rem}
#chatbot-input{flex:1;padding:.7rem;border:none;background:transparent;color:#fff;font-size:1rem}
body.dark #chatbot-input { color: var(--clr-text-dark); }

#chatbot-send{background:var(--clr-accent);border:none;color:#fff;font-weight:bold;padding:0 1.2rem;cursor:pointer}
#chatbot-send:disabled{background:#555;cursor:not-allowed}
.human-check{color:#ddd;font-size:.9rem;display:flex;align-items:center}.human-check input{margin-right:.5rem}
body.dark .human-check { color: #bbb; }

/* Responsive adjustments for chatbot if its container is not fixed width */
/* @media(max-width:600px){#chatbot-container{height:45vh;width:85%}} - This was in sample, but modal sizing handles it */

/*************  MOBILE NAV (from sample) *************/
/* This section is for the new mobile nav introduced by the sample */
/* It might conflict with or replace existing .mobile-nav, .mobile-services-menu styles if not scoped properly or if old ones are not removed */

@media(max-width:768px){
  .mobile-nav#mobileNav { /* ID specific for sample's nav */
    position:fixed;
    bottom:20px;
    right:90px; /* This assumes FAB stack is at right:20px */
    display:flex;
    flex-direction:row-reverse;
    gap:10px;
    padding:.5rem 1rem;
    background:var(--clr-bg);
    border-radius:30px;
    box-shadow:0 4px 8px #0003;
    z-index:3000;
    transform:scaleX(0);
    transform-origin:right;
    transition:transform .3s;
  }
  .mobile-nav#mobileNav.active{ /* ID specific */
    transform:scaleX(1);
  }
  /* Assuming .mobile-nav-item structure is similar to existing or defined here */
  /* Sample's .mobile-nav-item styling: */
  .mobile-nav#mobileNav .mobile-nav-item {
    display:flex;
    flex-direction:column;
    align-items:center;
    background:none;
    border:none;
    cursor:pointer;
    text-decoration:none;
    color:var(--clr-text);
    font-size:.75rem;
  }
  .mobile-nav#mobileNav .mobile-nav-item i {
    font-size:1.4rem;
  }
  .mobile-nav#mobileNav .mobile-nav-item span {
    display: block; /* Or some styling to ensure text is visible if not by default */
  }


  /* Services pop-up for the new mobile nav */
  .mobile-services-menu#mobile-services-menu { /* ID specific */
    position:fixed;
    bottom:90px; /* Adjust based on mobileNav's position and size */
    right:20px;
    background:var(--clr-bg);
    border:1px solid #ccc;
    border-radius:10px;
    padding:1rem;
    max-height:50%;
    overflow-y:auto;
    display:none; /* Toggled by JS */
    z-index:2000; /* Below mobileNav but above other content */
    box-shadow: 0 -2px 10px rgba(0,0,0,0.15); /* Added shadow similar to other menus */
  }
  .mobile-services-menu#mobile-services-menu.active{ /* ID specific */
    display:block;
  }
  /* Styling for buttons inside the new services menu */
  .mobile-services-menu#mobile-services-menu button {
    display:block;
    width:100%;
    margin-bottom:10px;
    text-decoration:none;
    color:var(--clr-text);
    font-size:1rem;
    background:none;
    border:none;
    padding:0.5rem; /* Added padding */
    text-align:left;
    cursor:pointer;
    border-radius: 4px; /* Added border-radius */
  }
   .mobile-services-menu#mobile-services-menu button:hover {
    background-color: rgba(0,0,0,0.1);
   }

  body.dark .mobile-nav#mobileNav,
  body.dark .mobile-services-menu#mobile-services-menu {
    background:var(--clr-bg-dark); /* Use specific dark bg if different from general component dark bg */
    border-color:#444;
  }
  body.dark .mobile-nav#mobileNav .mobile-nav-item,
  body.dark .mobile-services-menu#mobile-services-menu button { /* Corrected selector for buttons */
    color:var(--clr-text-dark);
  }
  body.dark .mobile-services-menu#mobile-services-menu button:hover {
    background-color: rgba(255,255,255,0.1);
  }
}

/* Hide sample's mobile nav on larger screens */
@media(min-width:769px){
  .mobile-nav#mobileNav,
  .mobile-services-menu#mobile-services-menu {
    display:none;
  }
}


/*************  FAB STACK  *************/
.fab-stack {
  position:fixed;
  bottom:20px;
  right:20px;
  display:flex;
  flex-direction:column;
  align-items:center;
  gap:10px;
  z-index:5000;
}

.fab-btn {
  width:var(--fab-size);
  height:var(--fab-size);
  border:none;
  border-radius:50%;
  background:var(--clr-primary);
  color:#fff;
  display:flex;
  align-items:center;
  justify-content:center;
  font-size:1.25rem;
  cursor:pointer;
  box-shadow:0 4px 8px #0006; /* Matched sample */
  position:relative;
  text-decoration: none;
}

.fab-btn:hover {
  background:var(--clr-primary-dark);
}

/* Tooltip for FABs */
.fab-btn[title]::after {
  content:attr(title);
  position:absolute;
  right:70px;
  background:#333;
  color:#fff;
  padding:4px 8px;
  border-radius:6px;
  font-size:.75rem;
  white-space:nowrap;
  display:none;
  z-index: 5001;
}

.fab-btn:hover::after {
  display:block;
}

/* Removed .fab-content-wrapper and .fab-text as per sample's simpler structure */
/* Icons are expected to be direct children of .fab-btn */

/*************  MOBILE NAV BASE  *************/
/* General style for all mobile-nav containers */
.mobile-nav {
  display:flex;
  gap:10px;
  padding:.5rem 1rem;
  background:var(--clr-bg);
  border-radius:30px;
  box-shadow:0 4px 8px rgba(0,0,0,0.18);
  z-index:3000;
}

/* Styles for items within any .mobile-nav */
.mobile-nav-item {
  display:flex;
  flex-direction:column;
  align-items:center;
  background:none;
  border:none;
  cursor:pointer;
  text-decoration:none;
  color:var(--clr-text);
  font-size:.75rem;
}

.mobile-nav-item i {
  font-size:1.4rem;
}

/* General style for all mobile-services-menu containers */
.mobile-services-menu {
  background:var(--clr-bg);
  border:1px solid #ccc;
  border-radius:10px;
  padding:1rem;
  max-height:50%;
  overflow-y:auto;
  display:none; /* Initially hidden, .active class will show it */
  z-index:2000;
}

.mobile-services-menu.active {
  display:block;
}

.mobile-services-menu a,
.mobile-services-menu button {
  display:block;
  margin-bottom:10px;
  text-decoration:none;
  color:var(--clr-text);
  font-size:1rem;
  background:none;
  border:none;
  padding:0;
  text-align:left;
  cursor:pointer;
  width:100%;
}

body.dark .mobile-nav,
body.dark .mobile-services-menu {
  background:var(--clr-bg-dark);
  border-color:#444;
}

body.dark .mobile-nav-item,
body.dark .mobile-services-menu a,
body.dark .mobile-services-menu button {
  color:var(--clr-text-dark);
}

#newFabToggle {
    position: fixed;
    bottom: 80px;
    right: 20px;
    width: var(--fab-size);
    height: var(--fab-size);
    border-radius: 50%;
    background: var(--clr-accent);
    color: #fff;
    display: flex; /* Controlled by responsive styles */
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    border: none;
    box-shadow: 0 2px 6px rgba(0,0,0,0.3);
    cursor: pointer;
    z-index: 4000;
}
#newFabToggle:hover {
    filter: brightness(90%);
}

#mobile-bottom-nav {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    justify-content: space-around;
    border-radius: 0;
    box-shadow: 0 -2px 5px rgba(0,0,0,0.1);
    z-index: 2999;
}

#newMobileNav {
    position: fixed;
    bottom: calc(20px + var(--fab-size) + 10px + 10px);
    right: 20px;
    flex-direction: column;
    width: auto;
    min-width: 150px;
    border-radius: 10px;
    transform: scaleY(0);
    transform-origin: bottom;
    transition: transform .3s ease-out;
}

#newMobileNav.active {
    transform: scaleY(1);
}

#mobile-services-panel {
    position: fixed;
    bottom: 60px;
    left: 0;
    right: 0;
    width: 90%;
    margin: 0 auto;
    border-radius: 10px;
    box-shadow: 0 -2px 10px rgba(0,0,0,0.15);
}

#newMobileServicesMenu {
    position: fixed;
    bottom: calc(20px + var(--fab-size) + 10px + 10px + 10px);
    right: calc(20px + 150px + 10px) ;
    width: auto;
    min-width: 200px;
}

/* ───────────────────────────────────────────────────────────
   Home-page hero alignment (07--)
   • Brand (OPS + tagline)   →  25 px from top-left
   • Language toggle buttons →  25 px from top-right, same right offset as FABs
   • “Our Services” block    →  centred horizontally, ~250 px from top
   ─────────────────────────────────────────────────────────── */

/* 1 ▸ site brand */
.header-content { /* Targets the wrapper for OPS h1 and tagline p */
  position: fixed;      /* lock to viewport */
  top: 25px;            /* 25 px from the top edge */
  left: 25px;           /* 25 px from the left edge */
  margin: 0;            /* cancel default h1 / p margins if they were on this div */
  line-height: 1.15;    /* Kept from original, good for text within */
  z-index: 1100;        /* Ensure it's above general content but potentially below modals/toggles if needed */
}

/* Individual text elements within .header-content might need margin:0 if they have user-agent styles */
.header-content .main-header-text,
.header-content .sub-header-text {
    margin: 0; /* Explicitly remove margins from h1 and p */
}

/* 2 ▸ Toggles container (Theme & Language) */
.header-toggles {
    position: fixed;
    top: 25px;
    right: 20px;          /* same 20 px gap as FABs */
    z-index: 1200;        /* make sure it sits above other UI (including header-content) */
    display: flex;
    align-items: center;
}

/* Styling for individual toggle buttons within .header-toggles */
.theme-toggle-btn {
  /* Specific styles for theme toggle if needed, beyond .header-toggle-btn */
  /* Example: ensure it has some base styling if not already covered by a shared class */
}

.lang-toggle-btn {  /* Using existing button selector */
  /* position, top, right, z-index are now handled by .header-toggles */
  margin-left: 5px; /* Space between theme toggle and language toggle */
}

/* Shared class for toggle buttons, if you have one like .header-toggle-btn, ensure it has base styles:
.header-toggle-btn {
    padding: 5px 10px;
    border: 1px solid #ccc; (example)
    background-color: #f0f0f0; (example)
    cursor: pointer;
}
*/

/* 3 ▸ services block (headline + pills) */
.services-section { /* Targets the existing section wrapping <h2> + service buttons */
  position: fixed;
  top: 250px;                     /* ~250 px below the top edge    */
  left: 50%;                      /* centre horizontally           */
  transform: translateX(-50%);    /* true centring                 */
  text-align: center;
  /* display: inline-block; */   /* Replaced with flex for better control if needed, though text-align:center on block might be enough */
  display: block; /* Changed to block for full width before centering with margin auto or transform */
  padding: 20px;                  /* Added some padding for better appearance */
  background: var(--clr-bg);      /* Ensure it has a background if it overlays other fixed elements */
  z-index: 1000;                  /* Default stacking context, can be adjusted */
  width: auto; /* Allow content to define width, then inline-block or similar can shrink-wrap */
}

/* To ensure the content inside .services-section (like .service-nav-list) is also centered if .services-section is block */
.services-section .services-navigation,
.services-section .service-nav-list {
    display: inline-block; /* To make them shrink-wrap and respect text-align:center of parent */
    text-align: left; /* Reset text-align for the content of these elements if needed */
}
.services-section .services-section-title {
    /* Title is already block and will be centered by text-align:center on .services-section */
}


/* Optional: keep it centred on very small screens too */
@media (max-width: 480px) {
  .services-section { /* Adjusted selector */
    width: 90vw;                  /* let it breathe on phones      */
    top: 200px; /* Slightly adjusted top for smaller screens */
    left: 50%; /* ensure left is still 50% for transform to work correctly */
    transform: translateX(-50%);
  }
}
